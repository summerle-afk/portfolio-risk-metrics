# -*- coding: utf-8 -*-
"""02_var_cvar.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sFZxHWHECJSBif6TSgHNhl6xIXC31DDh
"""

# Libraries
import numpy as np
import pandas as pd
import yfinance as yf
import matplotlib.pyplot as plt

# Data download
tickers = ['AAPL', 'MSFT', 'AMZN']
data = yf.download(tickers, start='2024-01-01', end='2024-12-31')['Close']

returns = data.pct_change().dropna()
returns.head()

# Equal weights
weights = np.array([1/3, 1/3, 1/3])

# Portfolio returns
portfolio_returns = returns.dot(weights)
portfolio_returns.head()

"""# **Historical VaR(Value at Risk) at 95%/99%**"""

# Historical VaR at 95%/99% confidence
var_95_hist = np.percentile(portfolio_returns.values, 5)
var_99_hist = np.percentile(portfolio_returns.values, 1)

print(f'Historical VaR at 95% confidence: {round(var_95_hist, 4)}')
print(f'Historical VaR at 99% confidence: {round(var_99_hist, 4)}')

"""# **Parametric VaR**"""

# Mean and standard deviation
mu = portfolio_returns.mean()
sigma = portfolio_returns.std()

# Z-scores for 95% and 99% confidence
z_95 = 1.65
z_99 = 2.33

var_95_param = mu - z_95 * sigma
var_99_param = mu - z_99 * sigma

print(f'Parametric VaR at 95% confidence: {round(var_95_param, 4)}')
print(f'Parametric VaR at 99% confidence: {round(var_99_param, 4)}')

"""# **Conditional VaR**"""

# Conditional VaR (Expected Shortfall)
cvar_95 = portfolio_returns[portfolio_returns <= var_95_hist].mean()
cvar_99 = portfolio_returns[portfolio_returns <= var_99_hist].mean()

print(f'Conditional VaR at 95% confidence: {round(cvar_95, 4)}')
print(f'Conditional VaR at 99% confidence: {round(cvar_99, 4)}')

"""# **Visualization**"""

# Plot histogram of portfolio returns
plt.figure(figsize=(10,6))
plt.hist(portfolio_returns, bins=50, alpha=0.7, color="skyblue", edgecolor="black")

# Shade 5% left tail (beyond 95% VaR)
plt.axvline((var_95_hist), color="red", linestyle="--", label=f"Hist VaR 95%: {var_95_hist:.3f}")
plt.axvline((var_99_hist), color="darkred", linestyle="--", label=f"Hist VaR 99%: {var_99_hist:.3f}")

# CVaR lines
plt.axvline((cvar_95), color="orange", linestyle=":", label=f"CVaR 95%: {cvar_95:.3f}")
plt.axvline((cvar_99), color="brown", linestyle=":", label=f"CVaR 99%: {cvar_99:.3f}")

plt.title("Portfolio Returns Distribution with VaR & CVaR")
plt.xlabel("Daily Return")
plt.ylabel("Frequency")
plt.legend()
plt.show()